<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FSFramework</name>
    </assembly>
    <members>
        <member name="T:FSFramework.Newtonsoft.CustomDateTimeConverter">
            <summary>
            自定义Json日期转换器(yyyy-MM-dd HH:mm:ss)
            </summary>
        </member>
        <member name="M:FSFramework.Newtonsoft.CustomDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="objectType"></param>
            <param name="existingValue"></param>
            <param name="serializer"></param>
            <returns></returns>
        </member>
        <member name="M:FSFramework.Newtonsoft.CustomDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="serializer"></param>
        </member>
        <member name="T:FSFramework.PrintSomething">
            <summary>
            
            </summary>
        </member>
        <member name="M:FSFramework.PrintSomething.PrintHeart">
            <summary>
            打印爱心
            </summary>
        </member>
        <member name="T:FSFramework.Toll.AppConfigHelper">
            <summary>
            配置文件帮助类
            </summary>
        </member>
        <member name="M:FSFramework.Toll.AppConfigHelper.Read(System.String)">
            <summary>
            读取配置
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:FSFramework.Toll.AppConfigHelper.Read``1(System.String)">
            <summary>
            读取指定类型配置数据
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:FSFramework.Toll.AppConfigHelper.Read``1(System.String,``0)">
            <summary>
            读取配置(没有读取到则返回默认值)
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key">key</param>
            <param name="defaultValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:FSFramework.Toll.AppConfigHelper.Write``1(System.String,``0)">
            <summary>
            写入配置信息
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:FSFramework.Toll.AppConfigHelper.Write(System.String,System.String)">
            <summary>
            写入配置信息
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:FSFramework.Toll.AppConfigHelper.Write``1(System.String,``0,System.Configuration.Configuration)">
            <summary>
            写入配置信息
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key">键</param>
            <param name="value">值</param>
            <param name="config">自定义配置文件</param>
            <returns></returns>
        </member>
        <member name="M:FSFramework.Toll.AppConfigHelper.Write(System.String,System.String,System.Configuration.Configuration)">
            <summary>
            写入配置信息
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
            <param name="config">自定义配置文件</param>
        </member>
        <member name="M:FSFramework.Toll.AppConfigHelper.Read(System.String,System.Configuration.Configuration)">
            <summary>
            读取指定配置文件
            </summary>
            <param name="key"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:FSFramework.Toll.AppConfigHelper.Read``1(System.String,``0,System.Configuration.Configuration)">
            <summary>
            读取指定配置文件 带默认值
            </summary>
            <param name="key"></param>
            <param name="defaultValue">默认值</param>
            <param name="config"></param>
        </member>
        <member name="M:FSFramework.Toll.AppConfigHelper.Load(System.String)">
            <summary>
            根据文件路径加载配置文件
            </summary>
            <param name="configPath">文件路径</param>
            <returns></returns>
        </member>
        <member name="M:FSFramework.Toll.AppConfigHelper.ConfigPath">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:FSFramework.Toll.DataTimeHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:FSFramework.Toll.DataTimeHelper.UnixTimeToDateTime(System.String)">
            <summary>
            Unix时间戳转为C#格式时间
            </summary>
            <param name="timeStamp"></param>
            <returns></returns>
        </member>
        <member name="M:FSFramework.Toll.DataTimeHelper.DateTimeToUnixTime(System.DateTime)">
            <summary>
            DateTime时间格式转换为Unix时间戳
            </summary>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="T:FSFramework.Toll.RegexHelper">
            <summary>
            正则表达式帮助类
            </summary>
        </member>
        <member name="M:FSFramework.Toll.RegexHelper.IsMatch(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="input"></param>
            <param name="pattern"></param>
            <returns></returns>
        </member>
        <member name="M:FSFramework.Toll.RegexHelper.MatchValue(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="input"></param>
            <param name="pattern"></param>
            <returns></returns>
        </member>
        <member name="M:FSFramework.Toll.RegexHelper.MatchValues(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="input"></param>
            <param name="pattern"></param>
            <returns></returns>
        </member>
        <member name="M:FSFramework.Toll.RegexHelper.IsIPv4(System.String)">
            <summary>
            验证IPv4地址
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:FSFramework.Toll.RegexHelper.IsIPv6(System.String)">
            <summary>  
            验证IPv6地址  
            [可用于匹配任何一个合法的IPv6地址]  
            </summary>  
            <param name="input">待验证的字符串</param>  
            <returns>是否匹配</returns>  
        </member>
        <member name="M:FSFramework.Toll.RegexHelper.IsEmail(System.String)">
            <summary>  
            验证电子邮箱  
            [@字符前可以包含字母、数字、下划线和点号；@字符后可以包含字母、数字、下划线和点号；@字符后至少包含一个点号且点号不能是最后一个字符；最后一个点号后只能是字母或数字]  
            </summary>  
            <param name="input">待验证的字符串</param>  
            <returns>是否匹配</returns>  
        </member>
        <member name="M:FSFramework.Toll.RegexHelper.IsURL(System.String)">
            <summary>  
            验证网址（可以匹配IPv4地址但没对IPv4地址进行格式验证；IPv6暂时没做匹配）  
            [允许省略"://"；可以添加端口号；允许层级；允许传参；域名中至少一个点号且此点号前要有内容]  
            </summary>  
            <param name="input">待验证的字符串</param>  
            <returns>是否匹配</returns>  
        </member>
        <member name="M:FSFramework.Toll.RegexHelper.IsTelePhoneNumber(System.String)">
            <summary>  
            验证固定电话号码  
            [3位或4位区号；区号可以用小括号括起来；区号可以省略；区号与本地号间可以用减号或空格隔开；可以有3位数的分机号，分机号前要加减号]  
            </summary>  
            <param name="input">待验证的字符串</param>  
            <returns>是否匹配</returns>  
        </member>
        <member name="M:FSFramework.Toll.RegexHelper.IsMobilePhoneNumber(System.String)">
            <summary>  
            验证手机号码  
            [可匹配"(+86)013325656352"，括号可以省略，+号可以省略，(+86)可以省略，11位手机号前的0可以省略；11位手机号第二位数可以是3、4、5、8中的任意一个]  
            </summary>  
            <param name="input">待验证的字符串</param>  
            <returns>是否匹配</returns>  
        </member>
        <member name="M:FSFramework.Toll.RegexHelper.IsPhoneNumber(System.String)">
            <summary>  
            验证电话号码（可以是固定电话号码或手机号码）  
            [固定电话：[3位或4位区号；区号可以用小括号括起来；区号可以省略；区号与本地号间可以用减号或空格隔开；可以有3位数的分机号，分机号前要加减号]]  
            [手机号码：[可匹配"(+86)013325656352"，括号可以省略，+号可以省略，(+86)可以省略，手机号前的0可以省略；手机号第二位数可以是3、4、5、8中的任意一个]]  
            </summary>  
            <param name="input">待验证的字符串</param>  
            <returns>是否匹配</returns>  
        </member>
        <member name="M:FSFramework.Toll.RegexHelper.IsZipCode(System.String)">
            <summary>  
            验证邮政编码  
            </summary>  
            <param name="input">待验证的字符串</param>  
            <returns>是否匹配</returns>  
        </member>
        <member name="M:FSFramework.Toll.RegexHelper.IsIDCard15(System.String)">
            <summary>  
            验证一代身份证号（15位数）  
            [长度为15位的数字；匹配对应省份地址；生日能正确匹配]  
            </summary>  
            <param name="input">待验证的字符串</param>  
            <returns>是否匹配</returns>  
        </member>
        <member name="M:FSFramework.Toll.RegexHelper.IsIDCard18(System.String)">
            <summary>  
            验证二代身份证号（18位数，GB11643-1999标准）  
            [长度为18位；前17位为数字，最后一位(校验码)可以为大小写x；匹配对应省份地址；生日能正确匹配；校验码能正确匹配]  
            </summary>  
            <param name="input">待验证的字符串</param>  
            <returns>是否匹配</returns>  
        </member>
        <member name="M:FSFramework.Toll.RegexHelper.IsIDCard(System.String)">
            <summary>  
            验证身份证号（不区分一二代身份证号）  
            </summary>  
            <param name="input">待验证的字符串</param>  
            <returns>是否匹配</returns>  
        </member>
        <member name="M:FSFramework.Toll.RegexHelper.IsNumber(System.String)">
            <summary>  
            验证数字(double类型)  
            [可以包含负号和小数点]  
            </summary>  
            <param name="input">待验证的字符串</param>  
            <returns>是否匹配</returns>  
        </member>
        <member name="M:FSFramework.Toll.RegexHelper.IsInteger(System.String)">
            <summary>  
            验证整数  
            </summary>  
            <param name="input">待验证的字符串</param>  
            <returns>是否匹配</returns>  
        </member>
        <member name="M:FSFramework.Toll.RegexHelper.IsIntegerNotNagtive(System.String)">
            <summary>  
            验证非负整数  
            </summary>  
            <param name="input">待验证的字符串</param>  
            <returns>是否匹配</returns>  
        </member>
        <member name="M:FSFramework.Toll.RegexHelper.IsIntegerPositive(System.String)">
            <summary>  
            验证正整数  
            </summary>  
            <param name="input">待验证的字符串</param>  
            <returns>是否匹配</returns>  
        </member>
        <member name="M:FSFramework.Toll.RegexHelper.IsDecimal(System.String)">
            <summary>  
            验证小数  
            </summary>  
            <param name="input">待验证的字符串</param>  
            <returns>是否匹配</returns>  
        </member>
        <member name="M:FSFramework.Toll.RegexHelper.IsEnglishCharacter(System.String)">
            <summary>  
            验证只包含英文字母  
            </summary>  
            <param name="input">待验证的字符串</param>  
            <returns>是否匹配</returns>  
        </member>
        <member name="M:FSFramework.Toll.RegexHelper.IsIntegerAndEnglishCharacter(System.String)">
            <summary>  
            验证只包含数字和英文字母  
            </summary>  
            <param name="input">待验证的字符串</param>  
            <returns>是否匹配</returns>  
        </member>
        <member name="M:FSFramework.Toll.RegexHelper.IsChineseCharacter(System.String)">
            <summary>  
            验证汉字  
            </summary>  
            <param name="input">待验证的字符串</param>  
            <returns>是否匹配</returns>  
        </member>
        <member name="M:FSFramework.Toll.RegexHelper.IsDateTime(System.String)">
            <summary>  
            验证日期  
            </summary>  
            <param name="input">待验证的字符串</param>  
            <returns>是否匹配</returns>  
        </member>
        <member name="M:FSFramework.Toll.RegexHelper.IsStringInclude(System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>  
            验证字符串包含内容  
            </summary>  
            <param name="input">待验证的字符串</param>  
            <param name="withEnglishCharacter">是否包含英文字母</param>  
            <param name="withNumber">是否包含数字</param>  
            <param name="withChineseCharacter">是否包含汉字</param>  
            <returns>是否匹配</returns>  
        </member>
        <member name="T:FSFramework.Toll.WebServiceHelper">
            <summary>
            动态调用WebService
            </summary>
        </member>
        <member name="M:FSFramework.Toll.WebServiceHelper.InvokeWebService(System.String,System.String,System.Object[])">
            <summary>  
            动态调用WebService  
            </summary>  
            <param name="url">WebService地址</param>  
            <param name="methodname">WebService方法名</param>  
            <param name="args">参数列表</param>  
            <returns>返回object</returns>  
        </member>
        <member name="M:FSFramework.Toll.WebServiceHelper.InvokeWebService(System.String,System.String,System.String,System.Object[])">
            <summary>  
            动态调用WebService  
            </summary>  
            <param name="url">WebService地址</param>  
            <param name="classname">类名</param>  
            <param name="methodname">WebService方法名</param>  
            <param name="args">参数列表</param>  
            <returns>返回object</returns>  
        </member>
        <member name="M:FSFramework.Toll.WebServiceHelper.GetClassName(System.String)">
            <summary>  
            得到URL中的WebService名称  
            </summary>  
            <param name="url">URL地址</param>  
            <returns>如http://wwww.baidu.com/service.asmx 则返回service</returns>  
        </member>
        <member name="M:FSFramework.Toll.FileHelper.CompareFileHash(System.String,System.String)">
            <summary>
            比较文件哈希值
            </summary>
            <param name="filePath1"></param>
            <param name="filePath2"></param>
            <returns></returns>
        </member>
        <member name="T:FSFramework.Toll.Log">
            <summary>
            写日志
            </summary>
        </member>
        <member name="M:FSFramework.Toll.Log.WriteLog(System.String)">
            <summary>
            写日志
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:FSFramework.Toll.Log.WriteLog(System.String,System.String)">
            <summary>
            写日志
            </summary>
            <param name="filePath">日志存放路径</param>
            <param name="log"></param>
        </member>
        <member name="T:FSFramework.Toll.NetworkHelper">
            <summary>
            网络帮助类
            </summary>
        </member>
        <member name="M:FSFramework.Toll.NetworkHelper.GetLocalIPv4">
            <summary>
            获取本机IPv4地址
            </summary>
            <returns></returns>
        </member>
        <member name="M:FSFramework.Toll.NetworkHelper.Ping(System.String,System.Int32)">
            <summary>
            ping IP地址 timeout 局域网用200,广域网用2000
            </summary>
            <param name="ip">IP地址</param>
            <param name="timeout">超时 毫秒</param>
            <returns></returns>
        </member>
        <member name="T:FSFramework.Toll.HardwareInformation">
            <summary>
            硬件信息
            </summary>
        </member>
        <member name="M:FSFramework.Toll.HardwareInformation.GetCpuID">
            <summary>
            CPU序列号
            </summary>
            <returns></returns>
        </member>
        <member name="M:FSFramework.Toll.HardwareInformation.GetHardDiskID">
            <summary>
            硬盘ID号
            </summary>
            <returns></returns>
        </member>
        <member name="M:FSFramework.Toll.HardwareInformation.GdetNetCardID">
            <summary>
            获取网卡MacAddress
            </summary>
            <returns></returns>
        </member>
        <member name="T:FSFramework.Toll.ConvertHelper">
            <summary>
            数据转换帮助类
            </summary>
        </member>
        <member name="M:FSFramework.Toll.ConvertHelper.BytesToHexString(System.Byte[])">
            <summary>
            字节数组转16进制字符串
            </summary>
            <param name="bytes"></param>
            <returns></returns>
        </member>
        <member name="M:FSFramework.Toll.ConvertHelper.HexStringToBytes(System.String)">
            <summary>
            16进制字符串转字节数组
            </summary>
            <param name="hexString"></param>
            <returns></returns>
        </member>
        <member name="M:FSFramework.Toll.ConvertHelper.Base64StringToBytes(System.String)">
            <summary>
            Base64字符转字节数组（图像）
            </summary>
            <param name="base64String"></param>
            <returns></returns>
        </member>
        <member name="M:FSFramework.Toll.ConvertHelper.ToRmbUpper(System.Decimal)">
            <summary>
            转大写人民币格式
            </summary>
            <param name="number"></param>
            <returns></returns>
        </member>
        <member name="M:FSFramework.Toll.ConvertHelper.ToRmbLower(System.Decimal)">
            <summary>
            转人民币格式
            </summary>
            <param name="number"></param>
            <returns></returns>
        </member>
        <member name="T:FSFramework.Toll.EncryptHelper">
            <summary>
            加解密帮助类
            </summary>
        </member>
        <member name="M:FSFramework.Toll.EncryptHelper.TripleDESEncodeCBC(System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            3DES加密CBC模式(.NET封装的DES算法的默认模式)
            </summary>
            <param name="key"></param>
            <param name="iv"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:FSFramework.Toll.EncryptHelper.TripleDESDecodeCBC(System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            3DES解密CBC模式(.NET封装的DES算法的默认模式)
            </summary>
            <param name="key"></param>
            <param name="iv"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:FSFramework.Toll.EncryptHelper.TripleDESEncodeECB(System.Byte[],System.Byte[])">
            <summary>
            3DES加密ECB模式(JAVA封装的DES算法的默认模式)，支持弱密钥
            </summary>
            <param name="key"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:FSFramework.Toll.EncryptHelper.TripleDESDecodeECB(System.Byte[],System.Byte[])">
            <summary>
            3DES解密ECB模式(JAVA封装的DES算法的默认模式)，支持弱密钥
            </summary>
            <param name="key"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:FSFramework.Toll.EncryptHelper.TripleDESEncode(System.String,System.String,System.String,System.Security.Cryptography.CipherMode)">
            <summary>
            3DES加密
            </summary>
            <param name="data">待加密的字符串</param>
            <param name="key">密钥</param>
            <param name="iv">加密矢量：只有在CBC解密模式下才适用</param>
            <param name="mode">运算模式</param>
            <returns>加密后的字符串</returns>
        </member>
        <member name="M:FSFramework.Toll.EncryptHelper.TripleDESDecode(System.String,System.String,System.String,System.Security.Cryptography.CipherMode)">
            <summary>
            3DES解密
            </summary>
            <param name="data">加密的字符串</param>
            <param name="key">密钥</param>
            <param name="iv">解密矢量：只有在CBC解密模式下才适用</param>
            <param name="mode">运算模式</param>
            <returns>解密的字符串</returns>
        </member>
        <member name="M:FSFramework.Toll.EncryptHelper.Sha1Encode(System.String)">
            <summary>
            SHA1哈希算法(UTF-8编码)
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:FSFramework.Toll.EncryptHelper.MD5Encode(System.String)">
            <summary>
            MD5哈希算法(UTF-8编码)
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="T:FSFramework.Toll.HttpHelper">
            <summary>
            HTTP帮助类
            </summary>
        </member>
        <member name="M:FSFramework.Toll.HttpHelper.HttpGet(System.String)">
            <summary>
            HTTP GET
            </summary>
            <param name="requestUri"></param>
            <returns></returns>
        </member>
        <member name="M:FSFramework.Toll.HttpHelper.HttpPost(System.String,System.String,System.String,System.String)">
            <summary>
            HTTP POST
            </summary>
            <param name="requestUri"></param>
            <param name="body"></param>
            <param name="method"></param>
            <param name="contentType"></param>
            <returns></returns>
        </member>
        <member name="M:FSFramework.Toll.HttpHelper.HttpGet_Basic(System.String,System.String,System.String)">
            <summary>
            HTTP GET Basic验证
            </summary>
            <param name="requestUri"></param>
            <param name="username"></param>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:FSFramework.Toll.HttpHelper.HttpPost_Basic(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            HTTP POST Basic验证
            </summary>
            <param name="requestUri"></param>
            <param name="body"></param>
            <param name="username"></param>
            <param name="password"></param>
            <param name="method">POST</param>
            <param name="contentType">application/json</param>
            <returns></returns>
        </member>
        <member name="T:FSFramework.Toll.INIFileHelper">
            <summary>
            Ini配置文件帮助类
            </summary>
        </member>
        <member name="M:FSFramework.Toll.INIFileHelper.GetPrivateProfileSectionNames(System.IntPtr,System.UInt32,System.String)">
            <summary>
            获取所有节点名称(Section)
            </summary>
            <param name="lpszReturnBuffer">存放节点名称的内存地址,每个节点之间用\0分隔</param>
            <param name="nSize">内存大小(characters)</param>
            <param name="lpFileName">Ini文件</param>
            <returns>内容的实际长度,为0表示没有内容,为nSize-2表示内存大小不够</returns>
        </member>
        <member name="M:FSFramework.Toll.INIFileHelper.GetPrivateProfileSection(System.String,System.IntPtr,System.UInt32,System.String)">
            <summary>
            获取某个指定节点(Section)中所有KEY和Value
            </summary>
            <param name="lpAppName">节点名称</param>
            <param name="lpReturnedString">返回值的内存地址,每个之间用\0分隔</param>
            <param name="nSize">内存大小(characters)</param>
            <param name="lpFileName">Ini文件</param>
            <returns>内容的实际长度,为0表示没有内容,为nSize-2表示内存大小不够</returns>
        </member>
        <member name="M:FSFramework.Toll.INIFileHelper.GetPrivateProfileString(System.String,System.String,System.String,System.Char[],System.UInt32,System.String)">
            <summary>
            读取INI文件中指定的Key的值
            </summary>
            <param name="lpAppName">节点名称。如果为null,则读取INI中所有节点名称,每个节点名称之间用\0分隔</param>
            <param name="lpKeyName">Key名称。如果为null,则读取INI中指定节点中的所有KEY,每个KEY之间用\0分隔</param>
            <param name="lpDefault">读取失败时的默认值</param>
            <param name="lpReturnedString">读取的内容缓冲区，读取之后，多余的地方使用\0填充</param>
            <param name="nSize">内容缓冲区的长度</param>
            <param name="lpFileName">INI文件名</param>
            <returns>实际读取到的长度</returns>
        </member>
        <member name="M:FSFramework.Toll.INIFileHelper.WritePrivateProfileSection(System.String,System.String,System.String)">
            <summary>
            将指定的键值对写到指定的节点，如果已经存在则替换。
            </summary>
            <param name="lpAppName">节点，如果不存在此节点，则创建此节点</param>
            <param name="lpString">Item键值对，多个用\0分隔,形如key1=value1\0key2=value2
            <para>如果为string.Empty，则删除指定节点下的所有内容，保留节点</para>
            <para>如果为null，则删除指定节点下的所有内容，并且删除该节点</para>
            </param>
            <param name="lpFileName">INI文件</param>
            <returns>是否成功写入</returns>
        </member>
        <member name="M:FSFramework.Toll.INIFileHelper.WritePrivateProfileString(System.String,System.String,System.String,System.String)">
            <summary>
            将指定的键和值写到指定的节点，如果已经存在则替换
            </summary>
            <param name="lpAppName">节点名称</param>
            <param name="lpKeyName">键名称。如果为null，则删除指定的节点及其所有的项目</param>
            <param name="lpString">值内容。如果为null，则删除指定节点中指定的键。</param>
            <param name="lpFileName">INI文件</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:FSFramework.Toll.INIFileHelper.INIGetAllSectionNames(System.String)">
            <summary>
            读取INI文件中指定INI文件中的所有节点名称(Section)
            </summary>
            <param name="iniFile">Ini文件</param>
            <returns>所有节点,没有内容返回string[0]</returns>
        </member>
        <member name="M:FSFramework.Toll.INIFileHelper.INIGetAllItems(System.String,System.String)">
            <summary>
            获取INI文件中指定节点(Section)中的所有条目(key=value形式)
            </summary>
            <param name="iniFile">Ini文件</param>
            <param name="section">节点名称</param>
            <returns>指定节点中的所有项目,没有内容返回string[0]</returns>
        </member>
        <member name="M:FSFramework.Toll.INIFileHelper.INIGetAllItemKeys(System.String,System.String)">
            <summary>
            获取INI文件中指定节点(Section)中的所有条目的Key列表
            </summary>
            <param name="iniFile">Ini文件</param>
            <param name="section">节点名称</param>
            <returns>如果没有内容,反回string[0]</returns>
        </member>
        <member name="M:FSFramework.Toll.INIFileHelper.INIGetStringValue(System.String,System.String,System.String,System.String)">
            <summary>
            读取INI文件中指定KEY的字符串型值
            </summary>
            <param name="iniFile">Ini文件</param>
            <param name="section">节点名称</param>
            <param name="key">键名称</param>
            <param name="defaultValue">如果没此KEY所使用的默认值</param>
            <returns>读取到的值</returns>
        </member>
        <member name="M:FSFramework.Toll.INIFileHelper.INIWriteItems(System.String,System.String,System.String)">
            <summary>
            在INI文件中，将指定的键值对写到指定的节点，如果已经存在则替换
            </summary>
            <param name="iniFile">INI文件</param>
            <param name="section">节点，如果不存在此节点，则创建此节点</param>
            <param name="items">键值对，多个用\0分隔,形如key1=value1\0key2=value2</param>
            <returns></returns>
        </member>
        <member name="M:FSFramework.Toll.INIFileHelper.INIWriteValue(System.String,System.String,System.String,System.String)">
            <summary>
            在INI文件中，指定节点写入指定的键及值。如果已经存在，则替换。如果没有则创建。
            </summary>
            <param name="iniFile">INI文件</param>
            <param name="section">节点</param>
            <param name="key">键</param>
            <param name="value">值</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:FSFramework.Toll.INIFileHelper.INIDeleteKey(System.String,System.String,System.String)">
            <summary>
            在INI文件中，删除指定节点中的指定的键。
            </summary>
            <param name="iniFile">INI文件</param>
            <param name="section">节点</param>
            <param name="key">键</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:FSFramework.Toll.INIFileHelper.INIDeleteSection(System.String,System.String)">
            <summary>
            在INI文件中，删除指定的节点。
            </summary>
            <param name="iniFile">INI文件</param>
            <param name="section">节点</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:FSFramework.Toll.INIFileHelper.INIEmptySection(System.String,System.String)">
            <summary>
            在INI文件中，删除指定节点中的所有内容。
            </summary>
            <param name="iniFile">INI文件</param>
            <param name="section">节点</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="T:FSFramework.Toll.ObjectHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:FSFramework.Toll.ObjectHelper.Copy``1(``0)">
            <summary>
            要复制的实例必须可序列化，包括实例引用的其它实例都必须在类定义时加[Serializable]特性
            </summary>
            <typeparam name="T"></typeparam>
            <param name="realObject"></param>
            <returns></returns>
        </member>
        <member name="T:FSFramework.Toll.ReflectionHelper">
            <summary>
            反射帮助类
            </summary>
        </member>
        <member name="M:FSFramework.Toll.ReflectionHelper.GetPrivateFieldValue``1(System.Object,System.String)">
            <summary>
            获取私有字段的值
            </summary>
            <typeparam name="T"></typeparam>
            <param name="instance"></param>
            <param name="fieldname"></param>
            <returns></returns>
        </member>
        <member name="M:FSFramework.Toll.ReflectionHelper.GetPrivatePropertyValue``1(System.Object,System.String)">
            <summary>
            获取私有属性的值
            </summary>
            <typeparam name="T"></typeparam>
            <param name="instance"></param>
            <param name="propertyname"></param>
            <returns></returns>
        </member>
        <member name="M:FSFramework.Toll.ReflectionHelper.SetPrivateFieldValue(System.Object,System.String,System.Object)">
            <summary>
            设置私有字段的值
            </summary>
            <param name="instance"></param>
            <param name="fieldname"></param>
            <param name="value"></param>
        </member>
        <member name="M:FSFramework.Toll.ReflectionHelper.SetPrivatePropertyValue(System.Object,System.String,System.Object)">
            <summary>
            设置私有属性的值
            </summary>
            <param name="instance"></param>
            <param name="propertyname"></param>
            <param name="value"></param>
        </member>
        <member name="M:FSFramework.Toll.ReflectionHelper.InvokePrivateMethod``1(System.Object,System.String,System.Object[])">
            <summary>
            执行私有方法
            </summary>
            <typeparam name="T"></typeparam>
            <param name="instance"></param>
            <param name="name"></param>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:FSFramework.Toll.ReflectionHelper.GetPublicPropertyValue``1(System.Object,System.String)">
            <summary>
            获取公有属性的值
            </summary>
            <typeparam name="T"></typeparam>
            <param name="instance"></param>
            <param name="propertyname"></param>
            <returns></returns>
        </member>
        <member name="M:FSFramework.Toll.ReflectionHelper.SetPublicPropertyValue(System.Object,System.String,System.Object)">
            <summary>
            设置公有属性的值
            </summary>
            <param name="instance"></param>
            <param name="propertyname"></param>
            <param name="value"></param>
        </member>
        <member name="M:FSFramework.Toll.ReflectionHelper.InvokePublicMethod``1(System.Object,System.String,System.Object[])">
            <summary>
            执行公有方法
            </summary>
            <typeparam name="T"></typeparam>
            <param name="instance"></param>
            <param name="name"></param>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="T:FSFramework.Toll.RegHelper">
            <summary>
            注册表操作帮助类
            </summary>
        </member>
        <member name="M:FSFramework.Toll.RegHelper.GetRegVal(Microsoft.Win32.RegistryKey,System.String,System.String,System.String@)">
            <summary>
            读取路径为keyPath，键名为keyName的注册表键值，缺省返回def
            </summary>
            <param name="rootkey"></param>
            <param name="keyPath">路径</param>
            <param name="keyName">键名</param>
            <param name="rtn">默认为null</param>
            <returns></returns>        
        </member>
        <member name="M:FSFramework.Toll.RegHelper.SetRegVal(Microsoft.Win32.RegistryKey,System.String,System.String,System.String)">
            <summary>
            设置路径为keyPath，键名为keyName的注册表键值为keyValue
            </summary>
            <param name="rootkey"></param>
            <param name="keyPath"></param>
            <param name="keyName"></param>
            <param name="keyValue"></param>
            <returns></returns>
        </member>
        <member name="M:FSFramework.Toll.RegHelper.CreateRegKey(Microsoft.Win32.RegistryKey,System.String)">
            <summary>
            创建路径为keyPath的键
            </summary>
            <param name="rootkey"></param>
            <param name="keyPath"></param>
            <returns></returns>
        </member>
        <member name="M:FSFramework.Toll.RegHelper.DelRegSubKey(Microsoft.Win32.RegistryKey,System.String)">
            <summary>
            删除路径为keyPath的子项
            </summary>
            <param name="rootkey"></param>
            <param name="keyPath"></param>
            <returns></returns>
        </member>
        <member name="M:FSFramework.Toll.RegHelper.DelRegSubKeyTree(Microsoft.Win32.RegistryKey,System.String)">
            <summary>
            删除路径为keyPath的子项及其附属子项
            </summary>
            <param name="rootkey"></param>
            <param name="keyPath"></param>
            <returns></returns>
        </member>
        <member name="M:FSFramework.Toll.RegHelper.DelRegKeyVal(Microsoft.Win32.RegistryKey,System.String,System.String)">
            <summary>
            删除路径为keyPath下键名为keyName的键值
            </summary>
            <param name="rootkey"></param>
            <param name="keyPath"></param>
            <param name="keyName"></param>
            <returns></returns>
        </member>
        <member name="T:FSFramework.Toll.TimeoutChecker">
            <summary>
            业务代码执行超时检查类
            </summary>
        </member>
        <member name="M:FSFramework.Toll.TimeoutChecker.#ctor(System.Action{System.Delegate},System.Action{System.Delegate})">
            <summary>
            
            </summary>
            <param name="proc">会超时的代码</param>
            <param name="timeoutHandle">超时后处理事件</param>
        </member>
        <member name="M:FSFramework.Toll.TimeoutChecker.Wait(System.Int64)">
            <summary>
            
            </summary>
            <param name="timeout">超时时间</param>
            <returns></returns>
        </member>
    </members>
</doc>
